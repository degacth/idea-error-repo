plugins {
    id 'org.springframework.boot' version '2.6.0-SNAPSHOT' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'java'
}

allprojects {
    group = 'com.alexmonad'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    def projectName = it.name
    def domainServices = ["products"]

    it.apply plugin: 'org.springframework.boot'
    it.apply plugin: 'io.spring.dependency-management'
    it.apply plugin: 'java'
    it.apply plugin: 'scala'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }

    ext {
        set('springCloudVersion', "2021.0.0-SNAPSHOT")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        if (domainServices.contains(projectName)) {
            implementation project(':domain')
            implementation 'org.axonframework:axon-spring-boot-starter:4.5.5'
        }

        implementation 'org.scala-lang:scala-library:2.13.7'
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        if (projectName != "eureka") {
            implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        }
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
    }

    test {
        useJUnitPlatform()
    }
}

gradle.taskGraph.whenReady {
    gradle.taskGraph.allTasks.forEach {
        if (it.name == "bootJar" && it.project.name == "domain") it.onlyIf {false}
    }
}
